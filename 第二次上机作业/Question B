#include <iostream>
#include <string>
#include <cmath>
using namespace std;

class Interpolation
{
  public:
  double f[10][10],x[10],t;
  double n;
  
void setData()
{
  cout<<"Please enter the n:";
    cin >> n;
  for (int i=0;i<=n;i++)
    {
    x[i]=-5+10*i/n;
    f[0][i]=fun1(x[i]);
    }
    
  for (int i=1;i<=n;i++)
    {
      for (int j=i;j<=n;j++)
      {

        f[i][j]=(f[i-1][j]-f[i-1][j-1])/(x[j]-x[j-i]);
      }
    }
}

double fun1(double x)
  {return 1/(1+pow(x,2));}

};

class function
{
  virtual double operator()(double x)=0;
};



class NewtonInterpolation:public Interpolation
{
  public:
  //生成差商表
  void getNewtonTable()
  {
    cout << "Newton Table:" <<endl;
    for (int i=0;i<=n;i++)
    {
      cout << x[i] <<"\t";
      for ( int j=0;j<=n;j++)
      {
        if (abs(f[j][i])>0.00001)
        {
        cout<<f[j][i]<<"\t\t";}

        
        else {
          cout << 0 << "\t\t";
        }
      }
      cout << endl;
    }
  }
//输出多项式
 void getInterpolationPolynomial()
{
  cout << "The Polynomial is ";
  for (int i=0;i<=n;i++)
  {
    if (f[i][i]>0 && i>0)
    cout<< "+"<<f[i][i];
    else{cout << f[i][i];}
    for (int j=0;j<i;j++){
    if (x[j]>0)
    {cout << "(x-"<<x[j]<<")";}
    else if(x[j]==0)
    {cout <<"x";}
    else
    {cout <<"(x+"<<-x[j]<<")";}
  }
  }
  cout << endl;
}

};
  
int main(void) {

  NewtonInterpolation new1;
  new1.setData();
  new1.getNewtonTable();
  new1.getInterpolationPolynomial();

  return 0;
}
